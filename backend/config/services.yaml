# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    League\Flysystem\FilesystemAdapter:
        class: League\Flysystem\Local\LocalFilesystemAdapter
        arguments:
            $location: '%kernel.project_dir%/public/avatars'
    
    League\Flysystem\Filesystem:
        class: App\Service\Filesystem\LocalFilesystem
        arguments:
            $adapter: '@League\Flysystem\FilesystemAdapter'
            $config: { visibility: public, directory_visibility: public }

when@aws: &services_aws
    services:
        Aws\S3\S3Client:
            arguments:
                -   version: 'latest'
                    region: 'eu-west-1'
                    credentials:
                        key: '%env(AWS_S3_ACCESS_ID)%'
                        secret: '%env(AWS_S3_ACCESS_SECRET)%'
        
        League\Flysystem\FilesystemAdapter:
            class: League\Flysystem\AwsS3V3\AwsS3V3Adapter
            arguments:
                $client: '@Aws\S3\S3Client'
                $bucket: '%env(AWS_S3_BUCKET)%'
                $prefix: avatars

        League\Flysystem\Filesystem:
            arguments:
                $adapter: '@League\Flysystem\FilesystemAdapter'

when@prod: *services_aws
